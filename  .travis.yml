matrix:
  include:
    - language: generic
      dist: bionic
      env:
        global:
          - NODE_VERSION=stable
          - ANDROID_TOOLS=4333796 # android-28
          - ANDROID_SDK_VERSION=28 # The current compileSdkVersion from build.gradle
          - ANDROID_BUILD_TOOLS_VERSION=29.0.2 # Depends on compileSdkVersion
          - ANDROID_HOME=${HOME}/android-sdk
          - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
          - JDK="1.8" # the JDK used for running tests
          - TOOLS=${ANDROID_HOME}/tools
          # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
          - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
          - PATH=${HOME}/.pub-cache/bin:${PATH}
          - API=29
          - ABI=x86
          - GOO=google_apis_playstore
      before_install:
        - java -version
        # Set up KVM
        - sudo apt-get -y --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder > /dev/null
        - sudo apt-get install -y libxtst6 libnss3-dev libnspr4 libxss1 libasound2 libatk-bridge2.0-0 libgtk-3-0 libgdk-pixbuf2.0-0
        # add travis user to groups
        - sudo adduser $USER libvirt
        - sudo adduser $USER kvm

        # Set up JDK 8 for Android SDK
        - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
        - export TARGET_JDK="${JDK}"
        - JDK="1.8" # used when running sdkmanager
        - source ~/.install-jdk-travis.sh

        # Set up Android SDK
        - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        
          # Avoid harmless sdkmanager warning
        - mkdir ~/.android
        - echo 'count=0' > ~/.android/repositories.cfg
        
        # Accept licenses before installing components, no need to echo y for each component
        - yes | sdkmanager --licenses >/dev/null

        # - source ./travisci/android-before-install.sh
      install:
        - sdkmanager "platform-tools" >/dev/null
        - sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
        - sdkmanager "build-tools;$ANDROID_BUILD_TOOLS_VERSION" >/dev/null # Implicit gradle dependency - gradle drives changes
        - sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
        - sdkmanager "platforms;android-$ANDROID_SDK_VERSION" >/dev/null # We need the API of the current compileSdkVersion from build.gradle

        - sdkmanager "emulator" >/dev/null
        - ${ANDROID_HOME}/emulator/emulator -version

        - |
          if [[ $ABI =~ "arm" ]]; then
            # Download a pinned version of the emulator since default version can cause issues
            emulator_version=5264690 # 29.2.1.0 (build_id 5889189) ==> 28.0.23.0 (build_id 5264690)
            # sudo apt-get install -y libunwind8 libc++1
            curl -fo emulator.zip "https://dl.google.com/android/repository/emulator-linux-$emulator_version.zip"
            rm -rf "${ANDROID_HOME}/emulator"
            unzip -q emulator.zip -d "${ANDROID_HOME}"
            rm -f emulator.zip
            # install build tools and platforms for arm (to allow emulator to run)
            sdkmanager "build-tools;25.0.2" "platforms;android-25" > /dev/null
          fi
        - ${ANDROID_HOME}/emulator/emulator -version

        - sdkmanager "extras;android;m2repository" >/dev/null
        - sdkmanager "system-images;android-$ANDROID_SDK_VERSION;default;x86" >/dev/null # install system images used in gradle.build
        - sdkmanager "system-images;android-$API;$GOO;$ABI" >/dev/null # install system images for emulator

        - echo no | avdmanager --verbose create avd --force -n Pixel_3_API_29 -k "system-images;android-$API;$GOO;$ABI"
        - sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/emulator -avd Pixel_3_API_29 -verbose -no-window -no-audio &"
        - JDK="${TARGET_JDK}"
        - source ~/.install-jdk-travis.sh


      before_script:
        # wait for emulator to finish startup
        - source ./travisci/android-wait-for-emulator.sh
        # unlock screen
        - adb shell input keyevent 82 &
        # install proejct dependencies
        - source ./travisci/android-install.sh

      script:
        - source ./travisci/android-scripts.sh
        - detox build -c android.emu.release
        - detox test -c android.emu.release --cleanup

    - language: objective-c
      os: osx
      osx_image: xcode11.4
      env:
        global:
          - NODE_VERSION=stable
      install:
        - source ./travisci/ios-install.sh
      script:
        - source ./travisci/ios-scripts.sh
